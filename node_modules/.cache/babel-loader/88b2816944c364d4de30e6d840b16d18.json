{"ast":null,"code":"import * as actionsTypes from \"../actions/actionsTypes\";\nconst initialState = {\n  ingredients: null,\n  price: 1,\n  error: false\n};\nconst INGREDIENTS_PRICE = {\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.9\n};\n\nconst toggleIngredients = (state, action, operator) => {\n  return { ...state,\n    ingredients: { ...state.ingredients,\n      [action.ingredientName]: operator === \"+\" ? state.ingredients[action.ingredientName] + 1 : operator === \"-\" ? state.ingredients[action.ingredientName] - 1 : null\n    },\n    price: operator === \"+\" ? state.price + INGREDIENTS_PRICE[action.ingredientName] : operator === \"-\" ? state.price - INGREDIENTS_PRICE[action.ingredientName] : null\n  };\n};\n\nconst burgerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsTypes.ADD_INGREDIENT:\n      return toggleIngredients(state, action, \"+\");\n\n    case actionsTypes.REMOVE_INGREDIENT:\n      return toggleIngredients(state, action, \"-\");\n\n    case actionsTypes.SET_INGREDIENTS:\n      return { ...state,\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        price: initialState.price,\n        error: false\n      };\n\n    case actionsTypes.FETCH_INGREDIENTS_FAILED:\n      return { ...state,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default burgerReducer;","map":{"version":3,"sources":["C:/Users/User/projects/BurgerBuilder/BurgerBuilder/src/store/reducers/burgerReducer.js"],"names":["actionsTypes","initialState","ingredients","price","error","INGREDIENTS_PRICE","salad","bacon","cheese","meat","toggleIngredients","state","action","operator","ingredientName","burgerReducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,yBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,KAAK,EAAE,CAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,GADiB;AAExBC,EAAAA,KAAK,EAAE,GAFiB;AAGxBC,EAAAA,MAAM,EAAE,GAHgB;AAIxBC,EAAAA,IAAI,EAAE;AAJkB,CAA1B;;AAOA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,QAAhB,KAA6B;AACrD,SAAO,EACL,GAAGF,KADE;AAELT,IAAAA,WAAW,EAAE,EACX,GAAGS,KAAK,CAACT,WADE;AAEX,OAACU,MAAM,CAACE,cAAR,GACED,QAAQ,KAAK,GAAb,GACIF,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C,CAD/C,GAEID,QAAQ,KAAK,GAAb,GACAF,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C,CAD3C,GAEA;AAPK,KAFR;AAWLX,IAAAA,KAAK,EACHU,QAAQ,KAAK,GAAb,GACIF,KAAK,CAACR,KAAN,GAAcE,iBAAiB,CAACO,MAAM,CAACE,cAAR,CADnC,GAEID,QAAQ,KAAK,GAAb,GACAF,KAAK,CAACR,KAAN,GAAcE,iBAAiB,CAACO,MAAM,CAACE,cAAR,CAD/B,GAEA;AAhBD,GAAP;AAkBD,CAnBD;;AAqBA,MAAMC,aAAa,GAAG,CAACJ,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKhB,YAAY,CAACiB,cAAlB;AACE,aAAOP,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgB,GAAhB,CAAxB;;AAEF,SAAKZ,YAAY,CAACkB,iBAAlB;AACE,aAAOR,iBAAiB,CAACC,KAAD,EAAQC,MAAR,EAAgB,GAAhB,CAAxB;;AAEF,SAAKZ,YAAY,CAACmB,eAAlB;AACE,aAAO,EACL,GAAGR,KADE;AAELT,QAAAA,WAAW,EAAE;AACXI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADf;AAEXC,UAAAA,KAAK,EAAEK,MAAM,CAACV,WAAP,CAAmBK,KAFf;AAGXC,UAAAA,MAAM,EAAEI,MAAM,CAACV,WAAP,CAAmBM,MAHhB;AAIXC,UAAAA,IAAI,EAAEG,MAAM,CAACV,WAAP,CAAmBO;AAJd,SAFR;AAQLN,QAAAA,KAAK,EAAEF,YAAY,CAACE,KARf;AASLC,QAAAA,KAAK,EAAE;AATF,OAAP;;AAYF,SAAKJ,YAAY,CAACoB,wBAAlB;AACE,aAAO,EACL,GAAGT,KADE;AAELP,QAAAA,KAAK,EAAE;AAFF,OAAP;;AAKF;AACE,aAAOO,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeI,aAAf","sourcesContent":["import * as actionsTypes from \"../actions/actionsTypes\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  price: 1,\r\n  error: false,\r\n};\r\n\r\nconst INGREDIENTS_PRICE = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  cheese: 0.4,\r\n  meat: 1.9,\r\n};\r\n\r\nconst toggleIngredients = (state, action, operator) => {\r\n  return {\r\n    ...state,\r\n    ingredients: {\r\n      ...state.ingredients,\r\n      [action.ingredientName]:\r\n        operator === \"+\"\r\n          ? state.ingredients[action.ingredientName] + 1\r\n          : operator === \"-\"\r\n          ? state.ingredients[action.ingredientName] - 1\r\n          : null,\r\n    },\r\n    price:\r\n      operator === \"+\"\r\n        ? state.price + INGREDIENTS_PRICE[action.ingredientName]\r\n        : operator === \"-\"\r\n        ? state.price - INGREDIENTS_PRICE[action.ingredientName]\r\n        : null,\r\n  };\r\n};\r\n\r\nconst burgerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionsTypes.ADD_INGREDIENT:\r\n      return toggleIngredients(state, action, \"+\");\r\n\r\n    case actionsTypes.REMOVE_INGREDIENT:\r\n      return toggleIngredients(state, action, \"-\");\r\n\r\n    case actionsTypes.SET_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        price: initialState.price,\r\n        error: false,\r\n      };\r\n\r\n    case actionsTypes.FETCH_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default burgerReducer;\r\n"]},"metadata":{},"sourceType":"module"}