{"ast":null,"code":"export const updateState = (state, updatedProperties) => {\n  return { ...state,\n    ...updatedProperties\n  };\n};\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.isMail) {\n    const pattern = /^[\\w]{1}[\\w-.]*@[\\w-]+\\.[a-z]{2,4}$/i;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isTel) {\n    const pattern = /^[\\d+][\\d()-]{7,19}\\d$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["C:/Users/User/projects/BurgerBuilder/BurgerBuilder/src/shared/utility.js"],"names":["updateState","state","updatedProperties","checkValidity","value","rules","isValid","required","trim","isMail","pattern","test","isTel","minLength","length"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,iBAAR,KAA8B;AACvD,SAAO,EACL,GAAGD,KADE;AAEL,OAAGC;AAFE,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAID,KAAK,CAACE,QAAV,EAAoB;AAClBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACD;;AACD,MAAID,KAAK,CAACI,MAAV,EAAkB;AAChB,UAAMC,OAAO,GAAG,sCAAhB;AACAJ,IAAAA,OAAO,GAAGI,OAAO,CAACC,IAAR,CAAaP,KAAb,KAAuBE,OAAjC;AACD;;AACD,MAAID,KAAK,CAACO,KAAV,EAAiB;AACf,UAAMF,OAAO,GAAG,wBAAhB;AACAJ,IAAAA,OAAO,GAAGI,OAAO,CAACC,IAAR,CAAaP,KAAb,KAAuBE,OAAjC;AACD;;AACD,MAAID,KAAK,CAACQ,SAAV,EAAqB;AACnBP,IAAAA,OAAO,GAAGF,KAAK,CAACU,MAAN,IAAgBT,KAAK,CAACQ,SAAtB,IAAmCP,OAA7C;AACD;;AAED,SAAOA,OAAP;AACD,CAlBM","sourcesContent":["export const updateState = (state, updatedProperties) => {\r\n  return {\r\n    ...state,\r\n    ...updatedProperties\r\n  }\r\n}\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.isMail) {\r\n    const pattern = /^[\\w]{1}[\\w-.]*@[\\w-]+\\.[a-z]{2,4}$/i;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  if (rules.isTel) {\r\n    const pattern = /^[\\d+][\\d()-]{7,19}\\d$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  return isValid;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}