{"ast":null,"code":"import * as actionsTypes from \"../actions/actionsTypes\";\nimport { updateState } from \"../utility\";\nconst initialState = {\n  orders: [],\n  loading: false,\n  orderConfirmed: false\n};\n\nconst orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsTypes.BURGER_ORDER_START:\n      return updateState(state, {\n        loading: true\n      });\n\n    case actionsTypes.BURGER_ORDER_INIT:\n      return updateState(state, {\n        orderConfirmed: false\n      });\n\n    case actionsTypes.BURGER_ORDER_SUCCESS:\n      const newOrder = updateState(action.orderData, {\n        id: action.orderId\n      });\n      return updateState(state, {\n        loading: false,\n        orders: state.orders.concat(newOrder),\n        error: false,\n        orderConfirmed: true\n      });\n\n    case actionsTypes.BURGER_ORDER_FAIL:\n      return updateState(state, {\n        loading: false\n      });\n\n    case actionsTypes.ORDERS_FETCH_SUCCESS:\n      return updateState(state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionsTypes.ORDERS_FETCH_FAIL:\n      return updateState(state, {\n        loading: false\n      });\n\n    case actionsTypes.ORDERS_FETCH_START:\n      return updateState(state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"sources":["C:/Users/User/projects/BurgerBuilder/BurgerBuilder/src/store/reducers/orderReducer.js"],"names":["actionsTypes","updateState","initialState","orders","loading","orderConfirmed","orderReducer","state","action","type","BURGER_ORDER_START","BURGER_ORDER_INIT","BURGER_ORDER_SUCCESS","newOrder","orderData","id","orderId","concat","error","BURGER_ORDER_FAIL","ORDERS_FETCH_SUCCESS","ORDERS_FETCH_FAIL","ORDERS_FETCH_START"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,yBAA9B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAY,CAACU,kBAAlB;AACE,aAAOT,WAAW,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAlB;;AAEF,SAAKJ,YAAY,CAACW,iBAAlB;AACE,aAAOV,WAAW,CAACM,KAAD,EAAQ;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAR,CAAlB;;AAEF,SAAKL,YAAY,CAACY,oBAAlB;AACE,YAAMC,QAAQ,GAAGZ,WAAW,CAACO,MAAM,CAACM,SAAR,EAAmB;AAAEC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAAb,OAAnB,CAA5B;AACA,aAAOf,WAAW,CAACM,KAAD,EAAQ;AACxBH,QAAAA,OAAO,EAAE,KADe;AAExBD,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB,CAFgB;AAGxBK,QAAAA,KAAK,EAAE,KAHiB;AAIxBb,QAAAA,cAAc,EAAE;AAJQ,OAAR,CAAlB;;AAOF,SAAKL,YAAY,CAACmB,iBAAlB;AACE,aAAOlB,WAAW,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAlB;;AAEF,SAAKJ,YAAY,CAACoB,oBAAlB;AACE,aAAOnB,WAAW,CAACM,KAAD,EAAQ;AACxBJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MADS;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAAR,CAAlB;;AAKF,SAAKJ,YAAY,CAACqB,iBAAlB;AACE,aAAOpB,WAAW,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAlB;;AAEF,SAAKJ,YAAY,CAACsB,kBAAlB;AACE,aAAOrB,WAAW,CAACM,KAAD,EAAQ;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAR,CAAlB;;AAEF;AACE,aAAOG,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,YAAf","sourcesContent":["import * as actionsTypes from \"../actions/actionsTypes\";\r\nimport { updateState } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  orderConfirmed: false,\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionsTypes.BURGER_ORDER_START:\r\n      return updateState(state, { loading: true });\r\n\r\n    case actionsTypes.BURGER_ORDER_INIT:\r\n      return updateState(state, { orderConfirmed: false });\r\n\r\n    case actionsTypes.BURGER_ORDER_SUCCESS:\r\n      const newOrder = updateState(action.orderData, { id: action.orderId });\r\n      return updateState(state, {\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n        error: false,\r\n        orderConfirmed: true,\r\n      });\r\n\r\n    case actionsTypes.BURGER_ORDER_FAIL:\r\n      return updateState(state, { loading: false });\r\n\r\n    case actionsTypes.ORDERS_FETCH_SUCCESS:\r\n      return updateState(state, {\r\n        orders: action.orders,\r\n        loading: false,\r\n      });\r\n\r\n    case actionsTypes.ORDERS_FETCH_FAIL:\r\n      return updateState(state, { loading: false });\r\n\r\n    case actionsTypes.ORDERS_FETCH_START:\r\n      return updateState(state, { loading: true });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n"]},"metadata":{},"sourceType":"module"}