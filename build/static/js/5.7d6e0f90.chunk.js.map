{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ing","className","classes","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","style","marginTop","length","textAlign","fontSize","id","axios"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,oFC8BXC,EA3BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAChCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAoBL,EAAYM,KACpC,SAAAC,GACE,OACE,iCAAsBA,EAAIJ,KAA1B,KAAkCI,EAAIH,OAAtC,MAAWG,EAAIJ,SAKrB,OACE,sBAAKK,UAAWC,IAAQX,MAAxB,UACE,6CAAe,uBAAOO,KACtB,wCACS,mCAASN,EAAMW,MAAMC,QAAQ,GAA7B,e,8BC8BAC,uBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAsBL,EAAOE,QAI7BP,CAGbW,aAjDa,SAACxB,GAAW,IACjBsB,EAAkBtB,EAAlBsB,cACRG,qBAAU,WACRH,EAActB,EAAMkB,MAAOlB,EAAMoB,UAChC,CAACE,EAAetB,EAAMkB,MAAOlB,EAAMoB,SAEtC,IAAIL,EAAS,KAqBb,OApBKf,EAAMiB,UACTF,EACE,qBAAKW,MAAO,CAAEC,UAAW,SAAzB,SAC2B,IAAxB3B,EAAMe,OAAOa,OACZ,mBAAGF,MAAO,CAAEG,UAAW,SAAUC,SAAU,SAAUH,UAAW,OAAhE,wCAIA3B,EAAMe,OAAOR,KAAI,SAACS,GAAD,OACf,cAAC,EAAD,CAEEf,YAAae,EAAMf,YACnBU,OAAQK,EAAML,OAFTK,EAAMe,UAUhBhB,IAsBkBiB","file":"static/js/5.7d6e0f90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__pQc3T\"};","import React from \"react\";\r\n\r\nimport classes from \"./Order.module.scss\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientsName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientsName,\r\n      amount: props.ingredients[ingredientsName],\r\n    });\r\n  }\r\n\r\n  const ingredientsOutput = ingredients.map(\r\n    ing => {\r\n      return (\r\n        <span key={ing.name}>{ing.name} ({ing.amount})</span>\r\n      )\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients:<br />{ingredientsOutput}</p>\r\n      <p>\r\n        Price: <strong>{props.price.toFixed(2)} $</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/order\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst Orders = (props) => {\r\n  const { onFetchOrders } = props;\r\n  useEffect(() => {\r\n    onFetchOrders(props.token, props.userId);\r\n  }, [onFetchOrders, props.token, props.userId]);\r\n\r\n  let orders = null;\r\n  if (!props.loading) {\r\n    orders = (\r\n      <div style={{ marginTop: \"100px\" }}>\r\n        {props.orders.length === 0 ? (\r\n          <p style={{ textAlign: \"center\", fontSize: \"1.7rem\", marginTop: \"50%\" }}>\r\n            You don't have any orders.\r\n          </p>\r\n        ) : (\r\n          props.orders.map((order) => (\r\n            <Order\r\n              key={order.id}\r\n              ingredients={order.ingredients}\r\n              price={+order.price}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return orders;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchedOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}