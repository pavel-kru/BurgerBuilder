{"version":3,"sources":["components/Order/Order.module.scss","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientsName","push","name","amount","ingredientsOutput","map","ing","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","style","marginTop","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,oHC8BXC,EA3BD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAmBF,EAAMC,YAChCA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAoBL,EAAYM,KACpC,SAAAC,GACE,OACE,iCAAsBA,EAAIJ,KAA1B,KAAkCI,EAAIH,OAAtC,MAAWG,EAAIJ,SAKrB,OACE,sBAAKK,UAAWC,IAAQX,MAAxB,UACE,6CAAe,uBAAOO,KACtB,wCACS,mCAASN,EAAMW,MAAMC,QAAQ,GAA7B,e,gCChBTC,E,uKAEJ,WACEC,KAAKd,MAAMe,cAAcD,KAAKd,MAAMgB,MAAOF,KAAKd,MAAMiB,U,oBAGxD,WACE,IAAIC,EAAS,cAACC,EAAA,EAAD,IAeb,OAdKL,KAAKd,MAAMoB,UACdF,EACE,qBAAKG,MAAO,CAAEC,UAAW,SAAzB,SACGR,KAAKd,MAAMkB,OAAOX,KAAI,SAACgB,GAAD,OACrB,cAAC,EAAD,CAEEtB,YAAasB,EAAMtB,YACnBU,OAAQY,EAAMZ,OAFTY,EAAMC,UASdN,M,GAtBUO,aAyCNC,uBAfS,SAACC,GACvB,MAAO,CACLT,OAAQS,EAAMJ,MAAML,OACpBE,QAASO,EAAMJ,MAAMH,QACrBJ,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,WAII,SAACY,GAC1B,MAAO,CACLd,cAAe,SAACC,EAAOC,GAAR,OAAmBY,EAASC,IAAsBd,EAAOC,QAI7DS,CAGbK,YAAiBlB,EAAQmB","file":"static/js/5.cf651304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__pQc3T\"};","import React from \"react\";\r\n\r\nimport classes from \"./Order.module.scss\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientsName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientsName,\r\n      amount: props.ingredients[ingredientsName],\r\n    });\r\n  }\r\n\r\n  const ingredientsOutput = ingredients.map(\r\n    ing => {\r\n      return (\r\n        <span key={ing.name}>{ing.name} ({ing.amount})</span>\r\n      )\r\n    }\r\n  )\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients:<br />{ingredientsOutput}</p>\r\n      <p>\r\n        Price: <strong>{props.price.toFixed(2)} $</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/order\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n     }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = (\r\n        <div style={{ marginTop: \"100px\" }}>\r\n          {this.props.orders.map((order) => (\r\n            <Order\r\n              key={order.id}\r\n              ingredients={order.ingredients}\r\n              price={+order.price}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return orders;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchedOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}